cabal-version:       2.2
name:                physics-edsl
version:             0.1.0.0
synopsis:            A Haskell EDSL for physics abstractions
description:         |
  physics-edsl is an embedded domain-specific language (EDSL) in Haskell
  for modeling and simulating physical systems. It builds on a formal
  component–phenomenon abstraction, providing compositional “runes” (atomic
  laws) and “spells” (composed behaviors) with first-class support for
  conservation laws and constraints.
license:             BSD-3-Clause
license-file:        LICENSE
author:              Anubhav Lamsal
maintainer:          333anubhav@gmail.com
copyright:           2025 Anubhav Lamsal
category:            Simulation
build-type:          Simple

library
  hs-source-dirs:
    src
  exposed-modules:
      Components
    , BooleanUtils.Literal
    , BooleanUtils.Transition
    , Action
    , BooleanUtils.Process
    , BooleanUtils.EventRule
    , BooleanUtils.EventWorkflow
    , Constraint
    , UnitLiteral
    , Body
    , System
    , ScalarLiteral
    , NState
    , Physics.DriftNR
    , Physics.Forces.GravNR
    , Physics.Integrators.EulerNR
    , Physics.Integrators.LeapfrogNR
    , Physics.Forces.Force
    , Physics.Forces.ForceNR
    , Physics.Forces.ForceDSL
    , System.SystemForces
    , Physics.Integrators.Leapfrog1D
    , Physics.Integrators.Symplectic4
    , Physics.Integrators.RK4Integrator
    , Physics.RigidBodyUtilities.RigidBody
    , Physics.RigidBodyUtilities.RigidState
    , Physics.RigidBodyUtilities.Rigid3DNR
    , Physics.Forces.Force3D
    , Physics.Contact
    , Physics.Lagrangian
    , NumericRule
    , NumericWorkflow
    , CAS.AST
    , CAS.Parser
    , CAS.PrettyPrinter
    , CAS.Simplify
    , CAS.Differentiate
    , CAS.Integrate.Integrate
    , CAS.Integrate.Exponential
    , CAS.Integrate.Logarithmic
    , CAS.Integrate.Polynomial
    , CAS.Integrate.Rational
    , CAS.Integrate.Trigonometric
    , CAS.SolveSystem
    , Physics.Forces.Extra
    , Physics.Math.Vec3Util
    , Physics.Sim.Compose
    , Physics.Collision.Types
    , Physics.Collision.BoundingVolume
    , Physics.Collision.BroadPhase.SweepAndPrune
    , Physics.Collision.BroadPhase.UniformGrid
    , Physics.Collision.Manager
    , Physics.Collision.NarrowPhase
    , Physics.Math.LinearAlgebra
  build-depends:
      base       >= 4.7 && < 5
    , containers >= 0.6 && < 1
    , linear       >= 1.22  && < 1.24
    , dimensional  >= 1.6   && < 1.7
    , parsec >=3.1 && <4
    , QuickCheck          >=2.14 && <3 
  default-language:
    Haskell2010
  ghc-options:
    -Wall
    -Wcompat
    -Widentities
    -Wincomplete-record-updates
    -Wincomplete-uni-patterns
    -Wmissing-export-lists
    -Wmissing-home-modules
    -Wpartial-fields
    -Wredundant-constraints

executable physics-edsl
  hs-source-dirs:
    app
  main-is:
    examples/example08.hs
  build-depends:
      base       >= 4.7 && < 5
    , containers >= 0.6 && < 1
    , physics-edsl
    , linear       >= 1.22  && < 1.24
    , dimensional  >= 1.6   && < 1.7

  default-language:
    Haskell2010
  ghc-options:
    -Wall

test-suite physics-edsl-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:
    test
  main-is:
    Spec.hs
  build-depends:
      base       >= 4.7 && < 5
    , containers >= 0.6 && < 1
    , hspec      >= 2.7
    , physics-edsl
    , linear       >= 1.22  && < 1.24
    , dimensional  >= 1.6   && < 1.7
  default-language:
    Haskell2010
  ghc-options:
    -Wall
